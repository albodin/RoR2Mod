#!/bin/bash
# post-commit hook - amend VSCode commits with version changes and create tags

# Check if we're in the project root
if [ ! -f "scripts/version_bump.py" ]; then
    exit 0
fi

# Check if version.h has staged changes (from prepare-commit-msg)
if ! git diff --quiet --cached src/version.h 2>/dev/null; then
    echo "Adding version changes to commit..."
    
    # Prevent infinite loop
    touch .git/AMENDING_VERSION
    
    # Amend the commit to include version.h
    git commit --amend --no-edit --no-verify
    
    echo "Version file added to commit via amendment"
fi

# Check if version.h changed in this commit and create tag if appropriate
if git diff --quiet HEAD~1 HEAD -- src/version.h 2>/dev/null; then
    # No version change, exit
    exit 0
fi

# Version changed, check if we should create a tag
echo "Version changed in this commit, checking if tag should be created..."

# Get the commit message and current version
COMMIT_MSG=$(git log -1 --pretty=%B)
CURRENT_VERSION=$(grep 'VERSION_STRING ' src/version.h | cut -d'"' -f2 2>/dev/null || echo "unknown")

if [ -n "$COMMIT_MSG" ] && [ "$CURRENT_VERSION" != "unknown" ]; then
    # Analyze commit message to determine bump type (replicate logic from version_bump.py)
    COMMIT_MSG_LOWER=$(echo "$COMMIT_MSG" | tr '[:upper:]' '[:lower:]')
    
    BUMP_TYPE="none"
    if echo "$COMMIT_MSG_LOWER" | grep -qE "(breaking change|!:)"; then
        BUMP_TYPE="major"
    elif echo "$COMMIT_MSG_LOWER" | grep -qE "^(feat|feature|add|added):"; then
        BUMP_TYPE="minor"
    elif echo "$COMMIT_MSG_LOWER" | grep -qE "^(fix|fixed|patch|bugfix):"; then
        BUMP_TYPE="patch"
    fi
    
    # Create tag only for major/minor versions
    if [ "$BUMP_TYPE" = "major" ] || [ "$BUMP_TYPE" = "minor" ]; then
        if git tag "v$CURRENT_VERSION" 2>/dev/null; then
            echo "Created git tag v$CURRENT_VERSION for $BUMP_TYPE version bump"
        else
            echo "Warning: Could not create git tag v$CURRENT_VERSION (may already exist)"
        fi
    else
        echo "Skipping git tag creation for $BUMP_TYPE version bump (only major/minor versions get tags)"
    fi
fi

exit 0